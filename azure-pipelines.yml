# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  rgName: 'LearnTVv2'
  location: 'eastus'
  imageName: 'LearnTV-RTMP'
  DOCKER_BUILDKIT: 1
  containerRegistryName: 'ltvACR'
  imageRepository: 'c9rtmp'
  tag: 'c9rtmp'
  dockerfilePath: 'Docker/Dockerfile'
  WebAppName: 'RTMP'


steps:

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'deployServicePrincipal'
    subscriptionId: '54a522b6-6cd7-4325-b4e6-566f9d921835'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'LearnTVv2'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: 'Deploy/azuredeploy-pipeline.json'
    overrideParameters: '-envName $(envName)'
    deploymentMode: 'Incremental'
    deploymentOutputs: ARM-outputs

- task: AzureCLI@2
  inputs:
    azureSubscription: 'deployServicePrincipal'
    scriptType: 'pscore'
    scriptLocation: 'scriptPath'
    scriptPath: 'Deploy/acr.ps1'
    arguments: '$(rgName) $(containerRegistryName)'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'deployServicePrincipal'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az acr build --registry $(containerRegistryName) --file Docker/Dockerfile --image $(imageRepository):v1 ./Docker'

- task: AzureWebAppContainer@1
  inputs:
    azureSubscription: 'deployServicePrincipal'
    appName: '$(WebAppName)'
    containers: '$(containerRegistryName)/$(imageRepository):latest'