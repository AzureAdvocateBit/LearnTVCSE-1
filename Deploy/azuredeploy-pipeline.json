{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "envName": {
            "type": "string",
            "defaultValue": "LTV",
            "minLength": 1,
            "maxLength": 9,
            "metadata": {
                "description": "Name of the project. keep the name between 3 and 9 caracters"
            }
        }
    },
    "functions": [
    ],
    "variables": {
        "VNet-LearnTV-Name": "[concat('vnet-',parameters('envName'))]",
        "FW-LearnTV-Name": "[concat('fw-',parameters('envName'))]",
        "location": "[resourceGroup().location]",
        "routeTables_FW_Route_name": "[concat('fw-route-',parameters('envName'))]",
        "uniqueStorageName": "[toLower(concat('sa',parameters('envName'),uniqueString(resourceGroup().id)))]",
        "routeTables_FW_Route_id": "[resourceId('Microsoft.Network/routeTables', variables('routeTables_FW_Route_name'))]",
        "virtual_Networks_id": "[resourceid('Microsoft.Network/virtualNetworks',variables('VNet-LearnTV-Name'))]",
        "public_IP_Address_Name": "[concat('IP-',parameters('envName'),'-public')]",
        "public_IP_Address_id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('public_IP_Address_Name'))]",
        "azureFirewallSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNet-LearnTV-Name'), 'AzureFirewallSubnet')]",
        "bastionHosts_BS_LearnLive_name": "[concat('bastion-',parameters('envName'))]",
        "bastionHosts_IP": "[concat('bastion-IP-',parameters('envName'))]",
        "fw_subnet_prefix": "10.0.0.0/24",
        "internal_subnet_prefix": "10.0.1.0/24",
        "Bastion_subnet_prefix": "10.0.254.0/24",
        "windowsVMstorage": "[tolower(concat('win',parameters('envName'),uniqueString(resourceGroup().id)))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-12-01",
            "name": "[variables('bastionHosts_IP')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat('bastion',parameters('envName'),'2'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-12-01",
            "name": "[variables('public_IP_Address_Name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(parameters('envName'),'rtmp'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[concat('NSG-',parameters('envName'))]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('VNet-LearnTV-Name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceid('Microsoft.Network/routeTables',variables('routeTables_FW_Route_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',concat('NSG-',parameters('envName')))]"
            ],
            "tags": {
                "displayName": "[variables('VNet-LearnTV-Name')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "internal",
                        "properties": {
                            "addressPrefix": "[variables('internal_subnet_prefix')]",
                            "routeTable": {
                                "id": "[variables('routeTables_FW_Route_id')]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "[variables('location')]"
                                    ]
                                }
                            ],
                            "delegations": [
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat('NSG-',parameters('envName')))]"
                            }
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[variables('Bastion_subnet_prefix')]",
                            "serviceEndpoints": [
                            ],
                            "delegations": [
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(variables('VNet-LearnTV-Name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VNet-LearnTV-Name'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('fw_subnet_prefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[variables('uniqueStorageName')]",
            "dependsOn": [
                "[resourceid('Microsoft.Network/virtualNetworks',variables('VNet-LearnTV-Name'))]"
            ],
            "location": "[variables('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[concat(variables('virtual_Networks_id'), '/subnets/internal')]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('uniqueStorageName'), '/default/', 'tvfeeds')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueStorageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-12-01",
            "name": "[variables('FW-LearnTV-Name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNet-LearnTV-Name'), 'AzureFirewallSubnet')]",
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('public_IP_Address_Name'))]",
                "[resourceId('Microsoft.Compute/virtualMachines','Linux-RTMP')]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {
                },
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('public_IP_Address_id')]"
                            },
                            "subnet": {
                                "id": "[variables('azureFirewallSubnetId')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "Net-RTMP-Inbound",
                        "properties": {
                            "priority": 300,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "RMTP",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "[reference('ubuntuVM1-NetworkInterface').ipConfigurations[0].properties.privateIPAddress]"
                                    ],
                                    "sourceIpGroups": [
                                    ],
                                    "destinationIpGroups": [
                                    ],
                                    "destinationFqdns": [
                                    ],
                                    "destinationPorts": [
                                        "1935"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Net-ALLvm-Outbound",
                        "properties": {
                            "priority": 200,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "Allow-DNS",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "209.244.0.3",
                                        "209.244.0.4"
                                    ],
                                    "sourceIpGroups": [
                                    ],
                                    "destinationIpGroups": [
                                    ],
                                    "destinationFqdns": [
                                    ],
                                    "destinationPorts": [
                                        "53"
                                    ]
                                },
                                {
                                    "name": "Allow-HTTP",
                                    "protocols": [
                                        "TCP",
                                        "UDP",
                                        "Any"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [
                                    ],
                                    "destinationIpGroups": [
                                    ],
                                    "destinationFqdns": [
                                    ],
                                    "destinationPorts": [
                                        "80"
                                    ]
                                },
                                {
                                    "name": "Allow-HTTPS",
                                    "protocols": [
                                        "TCP",
                                        "UDP",
                                        "Any"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [
                                    ],
                                    "destinationIpGroups": [
                                    ],
                                    "destinationFqdns": [
                                    ],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                },
                                {
                                    "name": "Allow-RTMP",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [
                                    ],
                                    "destinationIpGroups": [
                                    ],
                                    "destinationFqdns": [
                                    ],
                                    "destinationPorts": [
                                        "1935"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                ],
                "natRuleCollections": [
                    {
                        "name": "Inbound-DNAT",
                        "properties": {
                            "priority": 200,
                            "action": {
                                "type": "Dnat"
                            },
                            "rules": [
                                {
                                    "name": "DNAT-01",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],

                                    "translatedAddress": "[reference('ubuntuVM1-NetworkInterface').ipConfigurations[0].properties.privateIPAddress]",
                                    "translatedPort": "1935",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [
                                    ],
                                    "destinationAddresses": [
                                        "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('public_IP_Address_Name'))).IpAddress]"
                                    ],
                                    "destinationPorts": [
                                        "1935"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-12-01",
            "name": "[variables('routeTables_FW_Route_name')]",
            "location": "[variables('location')]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "FW-DR",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-12-01",
            "name": "[concat(variables('routeTables_FW_Route_name'), '/FW-DR')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTables_FW_Route_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.0.4"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-12-01",
            "name": "[variables('bastionHosts_BS_LearnLive_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceid('Microsoft.Network/virtualNetworks',variables('VNet-LearnTV-Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('bastionHosts_IP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNet-LearnTV-Name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('windowsVMstorage')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[variables('windowsVMstorage')]"
            },
            "location": "[variables('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            }
        }
    ],
    "outputs": {
        "FQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('public_IP_Address_Name'))).dnsSettings.fqdn]"
        },
        "Public-IP": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('public_IP_Address_Name'))).IpAddress]"
        }
    }
}
